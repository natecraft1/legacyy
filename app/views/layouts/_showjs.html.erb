<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
 
<script type="text/javascript">

$(document).ready(function() {
  $(function() {
    $( ".lesson" ).draggable();
    $(".what_i_did").draggable();
  });

  d3.select("body").append("svg");
  var yeardata = gon.ageray,
    displayedYears = yeardata.slice(yeardata.length-9, yeardata.length),
    containerWidth = 800,
    svg = d3.select("svg").attr('height', 60),
    space = containerWidth/displayedYears.length,
    scale = d3.scale.linear()
              .domain([0, d3.max(yeardata)])
              .range([9, 18]);
    scale2 = d3.scale.linear()
              .domain([0, d3.max(yeardata)])
              .range([13, 18]);

              console.log(space);
              console.log(containerWidth/2);

  var svgcontainer = svg.append('g');
  
  var texts,
      circles;
  
  update(displayedYears);
  
  function update(data) {
    scale3 = d3.scale.linear()
              .domain([0, d3.max(displayedYears)])
              .range([-1,1]);
    circles = svgcontainer.selectAll("circle")
    .data(displayedYears);
    circles.transition()
      .duration(600)
      .attr('r', function(d) { return scale(d); })

    circles.enter()
    .append("circle")
    .attr('class', 'circle')
    .style('fill', '#3CCAFA')
    .style('opacity', .3)
    .attr('cx', 20)
    .attr('cy', 30)
    .attr('r', function(d) { return scale(d); })
    .transition()
    .duration(600)
    .attr('cx', function(d,i) { return i*space + 20 + space*4;})
    .attr('cy', 30);

    texts = svgcontainer.selectAll('text')
      .data(data, String);
    texts.attr("class","update")
    .transition()
      .duration(750)
      .attr("dx", function(d, i) { return i*space + 20 + space*4 });

    texts.enter().append('text')
    .attr("class", "enter")
    .attr('dx', function(d, i) { return 0;})
    .attr('dy', 34)
    .attr("xlink:href", '#')
    .attr('pointer-events', 'all')
    .attr('font-size', function(d) { return scale2(d) })
    .style('font-family', 'Arial')
    .attr('font-weight', 'bold')
    .attr('font-style', 'italic')
    .attr('fill', '#161738')
    .on("mouseover", function(d, i) {
      d3.select(this)
      .transition()
      .duration(200)
      .attr('font-size', function(d) { return 45 })
      .attr('opacity', .5);
      d3.select(circles[0][i])
      .style('fill', 'red');
    })
    .on("mouseout", function(d, i) {
      d3.select(this)
      .transition()
      .duration(200)
      .attr('font-size', function(d) { return scale2(d) })
      .attr('opacity', 1);
      d3.select(circles[0][i])
      .style('fill', '#3CCAFA');
    })
    .on("click", function() {
      value = parseInt(d3.select(this).text());
      update(setNewData(value));  
      d3.selectAll('.circle')
        .transition()
        .duration(800)
        .attr('r', function(d) { 
          return scale(d); 
        });

    })
    .transition()
    .duration(700)
    .attr('dx', function(d, i) { return i*space + 20 + space*4});

    texts.text(function(d) { return d;});

    texts.exit()
      .transition()
      .duration(700)
      .attr('dx', function(d, i) { return scale3(i)*space*10 + space*3 + 20;})
      .attr('opacity', .5)
      .remove();
  }

  function setNewData(value) {
// if the number we clicked on is within the diff, the data doesn't change
    var first_from_all = yeardata[0]
    var last_from_all = yeardata[yeardata.length-1]
    var diff = value - displayedYears[(displayedYears.length-1)/2]
    var first = displayedYears[0]
    var last = displayedYears[displayedYears.length-1]
    var new_diff = last_from_all - value;
    var new_diff_two = first_from_all + value;
    var diff_abs = Math.abs(diff);
    
    function trimRight(diff) {
      displayedYears.splice(0, diff);
      for (i=0; i < 1*diff; i++) {
        displayedYears.push(last + i + 1)
      } 
    }
    function trimLeft(diff) {
      console.log('trimLeft called with' + diff);
      displayedYears.splice(displayedYears.length - diff, diff);
      for (i=0; i < diff; i++) {
        displayedYears.unshift(first - i - 1)
      }
    }

    if (diff > 0) {   
      
      if (last_from_all === last) {
        return displayedYears;
      }
      else {
        
        if (new_diff >= diff) {
          if (last_from_all - last < diff) {
            trimRight(last_from_all - last);
          } 
          else { 
            trimRight(diff);
          }
        }

        else { 
          trimRight(new_diff);  
        }
      } 
    }
    else {
      console.log(displayedYears);
      if (first_from_all === first) {
        return displayedYears;
      }
      else { 
        if (value <= diff_abs) {
          if (first - first_from_all < value) {
            trimLeft(first);
          } 
          else {
            trimLeft(value);
          }
        }
        else { 
          trimLeft(diff_abs);
        }
      }
    } 
    return displayedYears;
  }

  // var yeardata = gon.ageray,
  //   displayedYears = gon.shortArray,
  //   containerWidth = $('.span12').width(),
  //   svg = d3.select("svg").attr('height', 60),
  //   space = containerWidth/yeardata.length,
  //   scale = d3.scale.linear()
  //             .domain([0, d3.max(yeardata)])
  //             .range([9, 18]);
  //   scale2 = d3.scale.linear()
  //             .domain([0, d3.max(yeardata)])
  //             .range([13, 18]);

  // var svgcontainer = svg.append('g');
  // var circles = svgcontainer.selectAll("circle")
  //   .data(gon.ageray)
  //   .enter()
  //   .append("circle")
  //   .attr('class', 'circle')
  //   .style('fill', '#3CCAFA')
  //   .style('opacity', .3)
  //   .attr('cx', 20)
  //   .attr('cy', 30)
  //   .attr('r', function(d) { return scale(d); })
  //   .transition()
  //   .duration(1200)
  //   .attr('cx', function(d) { return d*space + 20;})
  //   .attr('cy', 30);

  // var texts = svgcontainer.selectAll('text.year')
  //   .data(yeardata).enter().append("svg:a")
  //   .attr('class', 'year')
  //   .append('text').text(function(d) { return d;})
  //   // .attr('dx', function(d) { return d*space + 15.5 })
  //   // .attr('dy', 34)
  //   .attr('dx', function(d) { return Math.random()*containerWidth})
  //   .attr('dy', function(d) { return Math.random()*containerWidth})
  //   .attr("xlink:href", '#')
  //   .attr('pointer-events', 'all')
  //   .attr('font-size', function(d) { return scale2(d) })
  //   .style('font-family', 'Arial')
  //   .attr('font-weight', 'bold')
  //   .attr('font-style', 'italic')
  //   .attr('fill', '#161738')
  //   .on("mouseover", function(d, i) {
  //     d3.select(this)
  //     .transition()
  //     .duration(200)
  //     .attr('font-size', function(d) { return 45 })
  //     .attr('opacity', .5);
  //     d3.select(circles[0][i])
  //     .style('fill', 'red');
  //   })
  //   .on("mouseout", function(d, i) {
  //     if (!$(this).is('#clicked')) {
  //       console.log("doesnt have clicked id");
  //       d3.select(this)
  //       .transition()
  //       .duration(200)
  //       .attr('font-size', function(d) { return scale2(d) })
  //       .attr('opacity', 1);
  //       d3.select(circles[0][i])
  //       .style('fill', '#3CCAFA');
  //     }
  //   })
  //   .transition()
  //   .duration(1100)
  //   .attr('dx', function(d) { return d*space + 15.5 })
  //   .attr('dy', 34);

  // when the page loads, call colorBubble with the current params
  colorBubble(gon.currentyr);
  
  function colorBubble(selectedAge) {
    console.log('colorbub');
    // d3.select('#clicked')
    //   .attr('opacity', .5)
    d3.select(circles[0][selectedAge])
      .style('fill', 'red');
  }

  $('#year_year').val(gon.currentyr);
  $('#edit_year_hidden').val("<%= params[:age] %>");
  $('span.fullyr').html(gon.yearborn + parseInt("<%= params[:age] %>"));
  $('span.fullyrtwo').html(gon.yearborn + parseInt("<%= params[:age] %>") + 1);

  $('span.yr').html(gon.currentyr);
  $('.edit_year').hide();
  
  if (gon.posts.length > 0) { 
    $('div.what_i_did').html(gon.posts[0].what_i_did);
    $('div.lesson').html(gon.posts[0].lesson_or_story);
  }

  findContent(gon.currentyr);

// if the page is refreshed and there IS a post for that year, ajax the data we'll display
  <% if @years_true %>
    ajaxReq(gon.currentyr);
  <% end %>

// when don't we want to call this function? 
// when there is not a year post for the year that is clicked 
  function ajaxReq(value) {
    console.log(" ajaxreqcalled");
    <% if !@user.nil? %>
      $.ajax({ 
          url: "/users/<%= @user.name.gsub(' ', '%20') %>/years/" + value, 
          type: "GET",
          dataType: 'json',
          success: function(data) {     
            $('body').css("background", "url(" + data.avatar_url + ") no-repeat fixed").css("background-size", "100% auto");  
            $("#edit_year_what_i_did").val(data.what_i_did);
            $("#edit_year_lesson_or_story").val(data.lesson_or_story);
          },
          error: function(jqXHR, textStatus, errorThrown) {
            console.log("error");

          }
      });
    <% end %>
  }
  function findContent(value) {  
    console.log("findcontent called");
    console.log(gon.posts.length);
    // if (gon.posts.length == 0) {

    // }
    for (var i=0; i<=gon.posts.length -1; i++) {
      if ((gon.posts.length !== 0) && (gon.posts[i].year == value))
      {
        $('.what_i_did').show();
        $('.lesson').show();
        $('.new_year').hide();
        $('.edit').show();
        what_i_did = gon.posts[i].what_i_did;
        lesson_or_story = gon.posts[i].lesson_or_story;
        insertContent(what_i_did, lesson_or_story);
        
        break;
      }
      else {
        $('body').css("background", '');
        $('.lesson').hide();
        $('.what_i_did').hide();
        $('.avatar').attr("src", '');
        $('.avatar').html("");
        $('.edit').hide();
        $('.edit_year').hide();
        $('.new_year').show();
        $('.what_i_did').html('');
        $('.lesson').html('');
      }
    }
  }
  function insertContent(what, lesson) {
    $('div.lesson').html('');
    $('div.what_i_did').html('');
    $('.what_i_did').html(what);
    $('.lesson').html(lesson);
  }
  // function arrowClick(value) {
  //   $(".arrow").click(function(event) {
  //     event.preventDefault();
  //     //might need ajax call to get params
  //   });
  // }
  $('.edit').click(function() {
    $('.edit_year').toggle('slow');
    $('.edit_year').val("Update year");
    return false;
  });
  $(".year").click(function(event) {
    event.preventDefault();

    $('#year_year').val($(this).text());
    $('#edit_year_hidden').val($(this).text());
    
    var val = $(this).text();

    d3.select('#clicked').attr("id", '');
    d3.select(this).attr("id", "clicked");
    // d3.select(this)
    //  .attr('font-size', function(d) { return scale2(d) })
    //  .attr('opacity', 1);
    // d3.select(circles[0][val])
    //  .style('fill', 'red');


    colorBubble(val);

    $('.edit_year').attr('action', "/<% if !@user.nil?%><%= @user.name %><% end %>/" + val + "/edit" );
    $('.edit_year > #edit_year_what_i_did').attr("name", "year[what_i_did]");
    $('.edit_year > #edit_year_lesson_or_story').attr("name", "year[lesson_or_story]");
    $('.edit_year > #edit_year_avatar').attr("name", "year[avatar]");
    $('.edit_year > #edit_year_hidden').attr("name", "year[year]");   

    $.get( "/<% if !@user.nil?%><%= @user.name %><% end %>/" + val, function(data) {
    });

    
    // changes the sentence "this is me at..."
    $('span.yr').html(val);
    $('span.fullyr').html(gon.yearborn + parseInt(val));
    $('span.fullyrtwo').html(gon.yearborn + parseInt(val) + 1);

    // find the post of the year that is clicked
    findContent(val);
    ajaxReq(val);


    history.replaceState({}, '', "/" + gon.username + '/' + val );
    return false;
  });
});
</script>